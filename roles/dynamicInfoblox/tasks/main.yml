---
#Customers typically use the default view
#- name: 'Create a dnsview named ansible'
#  nios_dns_view:
#    name: ansible
#    state: present
#    provider: '{{ nios_provider }}'

- name: 'Create a test network subnet'
  nios_network: 
    network: 192.168.1.0/24
    comment: test network subnet to add host records to
    state: present
    provider: '{{ nios_provider }}'

- name: 'Create a forward DNS local zone called ansible.local'
  nios_zone:
    #Hardcoded here and set as fact later
    name: ansible.local
    comment: this is a local DNS zone called ansible.local
    state: present
    provider: '{{ nios_provider }}'

#  This is a manual step for now     
#- name: 'Create a reverse DNS zone call 1.168.192.in-addr.arpa'
#  nios_zone:
#    name: 1.168.192.in-addr.arpa
#    comment: this is a reverse DNS zone called 1.168.192.in-addr.arpa'
#    state: present
#    provider: '{{ nios_provider }}'

- name: 'Set a fact for the local zone for further reuse'
  set_fact:
    ansible_zone: 'ansible.local'  

- name: 'Dynamically generate {{ host_count }} host records at next available ip'
  include_tasks: host_record_generation.yml
  loop_control:
    loop_var: count 
  with_sequence: start=1 end={{ host_count }}
...
